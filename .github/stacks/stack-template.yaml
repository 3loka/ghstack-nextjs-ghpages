version: 1.0                                      # stack-schema version 1.0

name: stack-reactjs-mysqldb-redis-algolia         # stack-template name by stack-template author
description: stack reactjs mysqldb redis algolia  # stack-template description by stack-template author

tags:                                             # stack-template tags
- stack-reactjs-mysqldb-redis-algolia
- stack-by-phoenix24
- reactjs 15.x
- mysql 5.1
- aloglia
- redis
- apache 2 licensed

#-------------------------------------------------------------
inputs:
# All the inputs that need to be provided/verified by the user should be defined as inputs. 
# The values can be provided using values.yml or from the UX. 
# All inputs defined here are required unless they are marked Required: optional
# All inputs will be of String type
# All inputs defined here will be available for scripts/workflows run as part of stack init
# Any input that is not explicitly configured as Repo/Environment secret will NOT be available in the new stack
# TBD : is_secret , default in place of value ; Should we have required/optional for Config parameters

 - name: RepoName
   value: myRailsApp
   description: Name of the new repo created from this stack
 - name: Repo_Description
   value: "This is a repo with a Rails App + MYSQL DB"
   description: Description of the new repo created from this stack
 - name: Reviewer_Count
   value: 2
   description: Number of required reviewers for PR
   validvalues: 
   - 2
   - 3
   - 4
   - 5
   - 6
 - name: DEV_SPN_ID
   description: SPN ID for Dev deployments
 - name: STAGING_SPN_ID
   description: SPN ID for STAGING deployments
 - name: PROD_SPN_ID
   description: SPN ID for Prod deployments
 - name: MYSQL_Connection_String
   description: DB credentials
 - name: init_script_echo
   value: "hello rails app"
   description: this would be consumed by init script
   required: false



#-------------------------------------------------------------
configs:
# Meta data for creating the new repository
- repo-metadata:
  parameters:
    name: {{ inputs.RepoName }}
    description: {{ inputs.Repo_Description }}
    secrets: 
       - name: DEV_SPN_ID
         value: {{inputs.DEV_SPN_ID}}
    topics:
    - Rails
    - SQL

 # Branch protection rules
 - branches:
   - name: release_v? #branch name or pattern you want to protect
     parameters:
       enforce-admins: true
       dismiss-stale-reviews: true
       require-code-owner-reviews: true
       required-approving-review-count: {{ inputs.Reviewer_Count }}
       allow-force-pushes: false
       allow-deletions: false
   
   - name: dev_v? #branch name or pattern you want to protect
     parameters:
       enforce-admins: true
       dismiss-stale-reviews: true
       require-code-owner-reviews: true
       required-approving-review-count: {{ inputs.Reviewer_Count }}
       allow-force-pushes: false
       allow-deletions: false

 # Environments & variables(secrets) to be created
 - environments: 
   - name: staging
     parameters: 
      protected-branches: false
      custom-branch-policies: true
      secrets:
        - name: Azure_SPN_ID
          value: {{inputs.STAGING_SPN_ID}}
        - name: MYSQL_Connection_String
          value: {{inputs.MYSQL_Connection_String}}
         
    - name: production
      parameters: 
        protected-branches: true
        custom-branch-policies: true
        secrets:
          - name: Azure_SPN_ID
            value: {{inputs.PROD_SPN_ID}}
          - name: SQL_Connection_String
            value: {{inputs.SQL_Connection_String}}

# Security and configuration settings to be enabled/disabled
 - security:
   parameters: 
     vulnerability-alerts: false
     automated-security-fixes: true


#-------------------------------------------------------------
# GitHub Apps to be installed - TBD
github-apps:
- name: Azure
- name: codetree



#-------------------------------------------------------------
init:                                             #This workflow file will NOT be part of the stack (new repo created). 
                                                  # workflow could use the stack inputs using the notation : ${{ github.event.inputs.name }}
                                                  
  - uses: ".github/workflows/setup.yml"           # stack-template exports to stack-instance
                                                  # ⚠️  - STACK_GITHUB_REPO_URL
                                                  # ⚠️  - STACK_GITHUB_REPO_WIKI
                                                  # ⚠️  - STACK_GITHUB_REPO_ISSUES
                                                  #
                                                  # ⚠️  - STACK_GITHUB_APPS_CODETREE
                                                  # ⚠️  - STACK_GITHUB_APPS_AZURE
                                                  #
                                                  # ⚠️  - STACK_GITHUB_ENVRONMENT_REVIEW
                                                  # ⚠️  - STACK_GITHUB_ENVRONMENT_PRODUCTION

                                                  # stack-template artifacts to stack-instance
                                                  # ⚠️  - a github repository
                                                  # ⚠️  - a github repository-wiki
                                                  # ⚠️  - a github repository-issues
                                                  # 
                                                  # ⚠️  - a github repository-app-codetree
                                                  # ⚠️  - a github repository-app-azure
                                                  # 
                                                  # ⚠️  - a github repository-env-review
                                                  # ⚠️  - a github repository-env-production


  - uses: "initialize-gcp-cloudrun.yaml"          # stack output: exports to stack-instance
                                                  # ⚠️    export CLOUDRUN_APP_URL
                                                  # ⚠️    export CLOUDRUN_DOCKER_IMAGE
                                                  
                                                  # ⚠️  artifacts from stack-template added to stack-instance 
                                                  # ⚠️    worfkow/build.yaml
                                                  # ⚠️    worfkow/deploy.yaml
                                                  # ⚠️    cloudrun app service



  - uses: "initialize-gcp-mysql.yaml"             # stack output exports to stack-instance
                                                  # ⚠️  - STACK_MYSQLDB_URL
                                                  # 
                                                  # stack-template artifacts to stack-instance
                                                  # ⚠️  - a gcp mysqldb instance



  - uses: "initialize-gcp-redis.yaml"             # stack output exports to stack-instance
                                                  # ⚠️  - STACK_REDIS_URL
                                                  # 
                                                  # stack-template artifacts to stack-instance
                                                  # ⚠️  - a gcp redis instance



  - uses: "initialize-gcp-algolia.yaml"           # stack-template exports to stack-instance
                                                  # ⚠️  exports STACK_ALGOLIA_URL
                                                  #
                                                  # stack-template artifacts to stack-instance
                                                  # ⚠️  - an algolia instance
